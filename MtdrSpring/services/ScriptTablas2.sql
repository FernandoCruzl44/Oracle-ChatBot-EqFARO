-- ALTER SESSION SET CURRENT_SCHEMA = TODOUSER;
-- Users table to store user information
CREATE TABLE TODOUSER.USERS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USERNAME VARCHAR2(50) NOT NULL UNIQUE,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR2(100) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
-- Projects table to organize tasks
CREATE TABLE TODOUSER.PROJECTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    DESCRIPTION VARCHAR2(500),
    OWNER_ID NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT FK_PROJECT_OWNER FOREIGN KEY (OWNER_ID) REFERENCES TODOUSER.USERS(ID)
);
-- Tasks table with estimated hours as NUMBER
CREATE TABLE TODOUSER.TASKS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL,
    DESCRIPTION VARCHAR2(2000),
    STATUS VARCHAR2(20) DEFAULT 'PENDING' NOT NULL,
    PRIORITY VARCHAR2(20) DEFAULT 'MEDIUM' NOT NULL,
    DUE_DATE DATE,
    PROJECT_ID NUMBER,
    ASSIGNEE_ID NUMBER,
    STORY_POINTS NUMBER,
    ESTIMATED_HOURS NUMBER,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT FK_TASK_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES TODOUSER.PROJECTS(ID),
    CONSTRAINT FK_TASK_ASSIGNEE FOREIGN KEY (ASSIGNEE_ID) REFERENCES TODOUSER.USERS(ID),
    CONSTRAINT CK_TASK_STATUS CHECK (
        STATUS IN (
            'PENDING',
            'IN_PROGRESS',
            'COMPLETED',
            'CANCELLED'
        )
    ),
    CONSTRAINT CK_TASK_PRIORITY CHECK (PRIORITY IN ('LOW', 'MEDIUM', 'HIGH', 'URGENT'))
);
-- Table for task comments
CREATE TABLE TODOUSER.TASK_COMMENTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TASK_ID NUMBER NOT NULL,
    USER_ID NUMBER NOT NULL,
    COMMENT_TEXT VARCHAR2(4000) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT FK_COMMENT_TASK FOREIGN KEY (TASK_ID) REFERENCES TODOUSER.TASKS(ID),
    CONSTRAINT FK_COMMENT_USER FOREIGN KEY (USER_ID) REFERENCES TODOUSER.USERS(ID)
);
-- Table for task attachments
CREATE TABLE TODOUSER.TASK_ATTACHMENTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TASK_ID NUMBER NOT NULL,
    FILE_NAME VARCHAR2(255) NOT NULL,
    FILE_PATH VARCHAR2(1000) NOT NULL,
    FILE_SIZE NUMBER NOT NULL,
    MIME_TYPE VARCHAR2(100) NOT NULL,
    UPLOADED_BY NUMBER NOT NULL,
    UPLOADED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT FK_ATTACHMENT_TASK FOREIGN KEY (TASK_ID) REFERENCES TODOUSER.TASKS(ID),
    CONSTRAINT FK_ATTACHMENT_USER FOREIGN KEY (UPLOADED_BY) REFERENCES TODOUSER.USERS(ID)
);
-- Project members junction table
CREATE TABLE TODOUSER.PROJECT_MEMBERS (
    PROJECT_ID NUMBER NOT NULL,
    USER_ID NUMBER NOT NULL,
    ROLE VARCHAR2(20) DEFAULT 'MEMBER' NOT NULL,
    JOINED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (PROJECT_ID, USER_ID),
    CONSTRAINT FK_MEMBER_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES TODOUSER.PROJECTS(ID),
    CONSTRAINT FK_MEMBER_USER FOREIGN KEY (USER_ID) REFERENCES TODOUSER.USERS(ID),
    CONSTRAINT CK_MEMBER_ROLE CHECK (ROLE IN ('OWNER', 'ADMIN', 'MEMBER', 'VIEWER'))
);
-- Add column comments
COMMENT ON COLUMN TODOUSER.TASKS.STORY_POINTS IS 'Relative complexity/effort value assigned to the task';
COMMENT ON COLUMN TODOUSER.TASKS.ESTIMATED_HOURS IS 'Estimated hours required to complete the task';
-- Create indexes for performance
CREATE INDEX TODOUSER.IDX_TASK_PROJECT ON TODOUSER.TASKS(PROJECT_ID);
CREATE INDEX TODOUSER.IDX_TASK_ASSIGNEE ON TODOUSER.TASKS(ASSIGNEE_ID);
CREATE INDEX TODOUSER.IDX_TASK_STATUS ON TODOUSER.TASKS(STATUS);
CREATE INDEX TODOUSER.IDX_TASK_DUE_DATE ON TODOUSER.TASKS(DUE_DATE);
CREATE INDEX TODOUSER.IDX_TASK_STORY_POINTS ON TODOUSER.TASKS(STORY_POINTS);
CREATE INDEX TODOUSER.IDX_COMMENT_TASK ON TODOUSER.TASK_COMMENTS(TASK_ID);
CREATE INDEX TODOUSER.IDX_ATTACHMENT_TASK ON TODOUSER.TASK_ATTACHMENTS(TASK_ID);
CREATE INDEX TODOUSER.IDX_PROJECT_OWNER ON TODOUSER.PROJECTS(OWNER_ID);